{"ast":null,"code":"import _defineProperty from \"/Users/utkarsh/SoftwareTesting/full-stack-with-react-and-spring-boot/frontend/todo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/utkarsh/SoftwareTesting/full-stack-with-react-and-spring-boot/frontend/todo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/utkarsh/SoftwareTesting/full-stack-with-react-and-spring-boot/frontend/todo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/utkarsh/SoftwareTesting/full-stack-with-react-and-spring-boot/frontend/todo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/utkarsh/SoftwareTesting/full-stack-with-react-and-spring-boot/frontend/todo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/utkarsh/SoftwareTesting/full-stack-with-react-and-spring-boot/frontend/todo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/utkarsh/SoftwareTesting/full-stack-with-react-and-spring-boot/frontend/todo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/utkarsh/SoftwareTesting/full-stack-with-react-and-spring-boot/frontend/todo-app/src/components/todo/LoginComponent.jsx\";\nimport React, { Component } from 'react';\nimport AuthenticationService from './AuthenticationService.js';\n\nvar LoginComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoginComponent, _Component);\n\n  function LoginComponent(props) {\n    var _this;\n\n    _classCallCheck(this, LoginComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginComponent).call(this, props));\n    _this.state = {\n      username: 'in28minutes',\n      password: '',\n      hasLoginFailed: false,\n      showSuccessMessage: false // this.handleUsernameChange = this.handleUsernameChange.bind(this)\n      // this.handlePasswordChange = this.handlePasswordChange.bind(this)\n\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.loginClicked = _this.loginClicked.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(LoginComponent, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      console.log(this.state);\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    } // handleUsernameChange(event) {\n    //     console.log(event.target.name);\n    //     this.setState(\n    //         {\n    //             [event.target.name]\n    //               :event.target.value\n    //         }\n    //     )\n    // }\n    // handlePasswordChange(event) {\n    //     console.log(event.target.value);\n    //     this.setState({password:event.target.value})\n    // }\n\n  }, {\n    key: \"loginClicked\",\n    value: function loginClicked() {\n      var _this2 = this;\n\n      //in28minutes,dummy\n      // if(this.state.username==='in28minutes' && this.state.password==='dummy'){\n      //     AuthenticationService.registerSuccessfulLogin(this.state.username,this.state.password)\n      //     this.props.history.push(`/welcome/${this.state.username}`)\n      //     //this.setState({showSuccessMessage:true})\n      //     //this.setState({hasLoginFailed:false})\n      // }\n      // else {\n      //     this.setState({showSuccessMessage:false})\n      //     this.setState({hasLoginFailed:true})\n      // }\n      // AuthenticationService\n      // .executeBasicAuthenticationService(this.state.username, this.state.password)\n      // .then(() => {\n      //     AuthenticationService.registerSuccessfulLogin(this.state.username,this.state.password)\n      //     this.props.history.push(`/welcome/${this.state.username}`)\n      // }).catch( () =>{\n      //     this.setState({showSuccessMessage:false})\n      //     this.setState({hasLoginFailed:true})\n      // })\n      AuthenticationService.executeJwtAuthenticationService(this.state.username, this.state.password).then(function (response) {\n        AuthenticationService.registerSuccessfulLoginForJwt(_this2.state.username, response.data.token);\n\n        _this2.props.history.push(\"/welcome/\".concat(_this2.state.username));\n      }).catch(function () {\n        _this2.setState({\n          showSuccessMessage: false\n        });\n\n        _this2.setState({\n          hasLoginFailed: true\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Login\"), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, this.state.hasLoginFailed && React.createElement(\"div\", {\n        className: \"alert alert-warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Invalid Credentials\"), this.state.showSuccessMessage && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Login Sucessful\"), \"User Name: \", React.createElement(\"input\", {\n        type: \"text\",\n        id: \"user\",\n        name: \"username\",\n        value: this.state.username,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), \"Password: \", React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: this.state.password,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"btn btn-success\",\n        onClick: this.loginClicked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Login\")));\n    }\n  }]);\n\n  return LoginComponent;\n}(Component);\n\nexport default LoginComponent;","map":{"version":3,"sources":["/Users/utkarsh/SoftwareTesting/full-stack-with-react-and-spring-boot/frontend/todo-app/src/components/todo/LoginComponent.jsx"],"names":["React","Component","AuthenticationService","LoginComponent","props","state","username","password","hasLoginFailed","showSuccessMessage","handleChange","bind","loginClicked","event","console","log","setState","target","name","value","executeJwtAuthenticationService","then","response","registerSuccessfulLoginForJwt","data","token","history","push","catch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport AuthenticationService from './AuthenticationService.js'\n\nclass LoginComponent extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            username: 'in28minutes',\n            password: '',\n            hasLoginFailed: false,\n            showSuccessMessage: false\n        }\n        // this.handleUsernameChange = this.handleUsernameChange.bind(this)\n        // this.handlePasswordChange = this.handlePasswordChange.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n        this.loginClicked = this.loginClicked.bind(this)\n    }\n\n    handleChange(event) {\n        console.log(this.state);\n        this.setState(\n            {\n                [event.target.name]\n                    : event.target.value\n            }\n        )\n    }\n\n    // handleUsernameChange(event) {\n    //     console.log(event.target.name);\n    //     this.setState(\n    //         {\n    //             [event.target.name]\n    //               :event.target.value\n    //         }\n    //     )\n    // }\n\n    // handlePasswordChange(event) {\n    //     console.log(event.target.value);\n    //     this.setState({password:event.target.value})\n    // }\n\n    loginClicked() {\n        //in28minutes,dummy\n        // if(this.state.username==='in28minutes' && this.state.password==='dummy'){\n        //     AuthenticationService.registerSuccessfulLogin(this.state.username,this.state.password)\n        //     this.props.history.push(`/welcome/${this.state.username}`)\n        //     //this.setState({showSuccessMessage:true})\n        //     //this.setState({hasLoginFailed:false})\n        // }\n        // else {\n        //     this.setState({showSuccessMessage:false})\n        //     this.setState({hasLoginFailed:true})\n        // }\n\n        // AuthenticationService\n        // .executeBasicAuthenticationService(this.state.username, this.state.password)\n        // .then(() => {\n        //     AuthenticationService.registerSuccessfulLogin(this.state.username,this.state.password)\n        //     this.props.history.push(`/welcome/${this.state.username}`)\n        // }).catch( () =>{\n        //     this.setState({showSuccessMessage:false})\n        //     this.setState({hasLoginFailed:true})\n        // })\n        AuthenticationService\n            .executeJwtAuthenticationService(this.state.username, this.state.password)\n            .then((response) => {\n                AuthenticationService.registerSuccessfulLoginForJwt(this.state.username, response.data.token)\n                this.props.history.push(`/welcome/${this.state.username}`)\n            }).catch(() => {\n                this.setState({ showSuccessMessage: false })\n                this.setState({ hasLoginFailed: true })\n            })\n\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Login</h1>\n                <div className=\"container\">\n                    {/*<ShowInvalidCredentials hasLoginFailed={this.state.hasLoginFailed}/>*/}\n                    {this.state.hasLoginFailed && <div className=\"alert alert-warning\">Invalid Credentials</div>}\n                    {this.state.showSuccessMessage && <div>Login Sucessful</div>}\n                    {/*<ShowLoginSuccessMessage showSuccessMessage={this.state.showSuccessMessage}/>*/}\n                    User Name: <input type=\"text\" id=\"user\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\n                    Password: <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n                    <button className=\"btn btn-success\" onClick={this.loginClicked}>Login</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default LoginComponent"]},"metadata":{},"sourceType":"module"}